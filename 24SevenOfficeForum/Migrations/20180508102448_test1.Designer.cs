// <auto-generated />
using _24SevenOfficeForum;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using _24SevenOfficeForum.Models;


namespace _24SevenOfficeForum.Migrations
{
    [DbContext(typeof(_24hOfficeforumContext))]
    [Migration("20180508102448_test1")]
    partial class test1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_24SevenOfficeForum.Models.Answer", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<int>("QuestionId");

                    b.Property<int?>("SearchViewModelsId");

                    b.Property<int?>("Upvote");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SearchViewModelsId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("_24SevenOfficeForum.Models.Category", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("_24SevenOfficeForum.Models.Question", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("AnswerId");

                    b.Property<string>("Body")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Header")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<int?>("SearchViewModelsId");

                    b.Property<int?>("Upvote");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SearchViewModelsId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("_24SevenOfficeForum.Models.SearchViewModel", b =>
                {
                    b.Property<int>("sId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("sId");

                    b.ToTable("SearchViewModel");
                });

            modelBuilder.Entity("_24SevenOfficeForum.Models.Answer", b =>
                {
                    b.HasOne("_24SevenOfficeForum.Models.Question", "Question")
                        .WithMany("Answer")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK_Answer_Question");

                    b.HasOne("_24SevenOfficeForum.Models.SearchViewModel")
                        .WithMany("Answers")
                        .HasForeignKey("SearchViewModelsId");
                });

            modelBuilder.Entity("_24SevenOfficeForum.Models.Question", b =>
                {
                    b.HasOne("_24SevenOfficeForum.Models.Category", "Category")
                        .WithMany("Question")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Question_Category");

                    b.HasOne("_24SevenOfficeForum.Models.SearchViewModel")
                        .WithMany("Questions")
                        .HasForeignKey("SearchViewModelsId");
                });
#pragma warning restore 612, 618
        }
    }
}
